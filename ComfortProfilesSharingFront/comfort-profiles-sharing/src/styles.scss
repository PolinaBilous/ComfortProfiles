/* You can add global styles to this file, and also import other style files */
body {
    margin: 0;
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

@import "~ng-pick-datetime/assets/style/picker.min.css";

$mat-black: (
  50: black,
  100: black,
  200: black,
  300: black,
  400: black,
  500: black,
  600: black,
  700: black,
  800: black,
  900: black,
  A100: black,
  A200: black,
  A400: black,
  A700: black,
  contrast: (
    50: white,
    100: white,
    200: white,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: white,
    A200: white,
    A400: white,
    A700: white,
  )
);

@import '~@angular/material/theming';
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$candy-app-primary: mat-palette($mat-black, 600);
$candy-app-accent:  mat-palette($mat-black);
$candy-app-warn:    mat-palette($mat-black);
// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

/deep/ .mat-step-header .mat-step-icon {
  background-color: red;
  color: red;
}
